export interface SourceProvider<T> {
  provide: () => Promise<T | null | undefined>;
}

export enum ErrorMessages {
  SomethingBadHappened = 'Something bad happened!',
  BadIdValue = 'Bad id value!',
  BadFormat = 'Bad format!',
  NotFound = 'Not found!',
}

// Generated by https://quicktype.io
//

export interface Product {
  __typename: ProductTypename;
  id: string;
  productCode: string;
  name: string;
  slug: string;
  primaryImage: string;
  baseImgUrl: string;
  overrideUrl: null;
  variant: Variant;
}

export enum ProductTypename {
  SingleVariantProduct = 'SingleVariantProduct',
}

export interface Variant {
  id: string;
  sku: string;
  salePercentage: number;
  attributes: Attributes;
  price: Price;
  listPrice: ListPrice;
  __typename: VariantTypename;
}

export enum VariantTypename {
  ProductVariant = 'ProductVariant',
}

export interface Attributes {
  rating: number | null;
  maxOrderQuantity: number;
  availabilityStatus: AvailabilityStatus;
  availabilityText: AvailabilityText;
  vipAvailabilityStatus: null;
  vipAvailabilityText: null;
  canAddToBag: boolean;
  canAddToWishlist: boolean;
  vipCanAddToBag: null;
  onSale: boolean;
  isNew: boolean | null;
  featuredFlags: FeaturedFlag[];
  __typename: AttributesTypename;
}

export enum AttributesTypename {
  ProductAttributes = 'ProductAttributes',
}

export enum AvailabilityStatus {
  BComingSoonAtDate = 'B_COMING_SOON_AT_DATE',
  DComingSoon = 'D_COMING_SOON',
  EAvailable = 'E_AVAILABLE',
  FBackorderForDate = 'F_BACKORDER_FOR_DATE',
  GBackorder = 'G_BACKORDER',
  HOutOfStock = 'H_OUT_OF_STOCK',
  KSoldOut = 'K_SOLD_OUT',
}

export enum AvailabilityText {
  AvailableNow = 'Available now',
  BackordersAcceptedWillShipBySeptember22021 = 'Backorders accepted, will ship by September 2, 2021',
  BackordersAcceptedWillShipIn60Days = 'Backorders accepted, will ship in 60 days',
  ComingSoon = 'Coming Soon',
  ComingSoonOnOctober12021 = 'Coming Soon on October 1, 2021',
  ComingSoonOnSeptember12021 = 'Coming Soon on September 1, 2021',
  SoldOut = 'Sold out',
  TemporarilyOutOfStock = 'Temporarily out of stock',
}

export interface FeaturedFlag {
  key: Key;
  label: Label;
  __typename: FeaturedFlagTypename;
}

export enum FeaturedFlagTypename {
  FeaturedFlags = 'FeaturedFlags',
}

export enum Key {
  HardToFind = 'hardToFind',
  New = 'new',
}

export enum Label {
  HardToFind = 'Hard to find',
  New = 'New',
}

export interface ListPrice {
  formattedAmount: string;
  centAmount: number;
  __typename: ListPriceTypename;
}

export enum ListPriceTypename {
  Price = 'Price',
}

export interface Price {
  formattedAmount: string;
  centAmount: number;
  currencyCode: CurrencyCode;
  formattedValue: number;
  __typename: ListPriceTypename;
}

export enum CurrencyCode {
  Usd = 'USD',
}
